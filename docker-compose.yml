name: movie-recs

services:
  backend:
    build: ./backend
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=production
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - FLASK_APP=app
      - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - ./backend:/app
    entrypoint: ["/app/entrypoint.sh"]

  # frontend:
  #   build: ./frontend
  #   ports:
  #     - "3000:80" # prod port binding
  #     # - "3000:3000" # dev port binding
  #   depends_on:
  #     - backend

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

#   data-ingest:
#     build: ./backend
#     environment:
#       - FLASK_ENV=production
#       - FLASK_APP=app
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#       - POSTGRES_DB=${POSTGRES_DB}
#       - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
#       - TMDB_TOKEN=${TMDB_TOKEN}
#       - RUN_FLAG=False # to execute this service, set True
#     depends_on:
#       - db
#       - backend
#       # - reset-movies-table
#     volumes:
#       - ./backend:/app
#     command: ["python", "/app/data_ingest.py", "add_movie_images"]

# # set RUN_FLAG to 'True' to clear movies db if need to repopulate with new columns
#   reset-movies-table:
#     build: ./backend
#     environment:
#       - FLASK_ENV=production
#       - FLASK_APP=app
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#       - POSTGRES_DB=${POSTGRES_DB}
#       - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
#       - RUN_FLAG=False
#     depends_on:
#       - db
#       - backend
#     volumes:
#       - ./backend:/app
#     command: ["python", "/app/reset_movies.py"]

volumes:
  postgres_data:
